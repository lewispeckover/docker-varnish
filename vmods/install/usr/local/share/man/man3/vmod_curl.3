.\" Man page generated from reStructuredText.
.
.TH VMOD_CURL 3 "" "" ""
.SH NAME
vmod_curl \- cURL bindings for Varnish
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" 
.
.\" NB:  This file is machine generated, DO NOT EDIT!
.
.\" 
.
.\" Edit vmod.vcc and run make instead
.
.\" 
.
.SH SYNOPSIS
.sp
import curl [from "path"] ;
.SH CONTENTS
.INDENT 0.0
.IP \(bu 2
STRING body(PRIV_TASK)
.IP \(bu 2
STRING error(PRIV_TASK)
.IP \(bu 2
STRING escape(STRING)
.IP \(bu 2
VOID fetch(PRIV_TASK, STRING)
.IP \(bu 2
VOID free(PRIV_TASK)
.IP \(bu 2
VOID get(PRIV_TASK, STRING)
.IP \(bu 2
VOID head(PRIV_TASK, STRING)
.IP \(bu 2
STRING header(PRIV_TASK, STRING)
.IP \(bu 2
VOID header_add(PRIV_TASK, STRING)
.IP \(bu 2
VOID header_add_all(PRIV_TASK)
.IP \(bu 2
VOID header_remove(PRIV_TASK, STRING)
.IP \(bu 2
VOID post(PRIV_TASK, STRING, STRING)
.IP \(bu 2
VOID proxy(PRIV_TASK, STRING)
.IP \(bu 2
VOID set_connect_timeout(PRIV_TASK, INT)
.IP \(bu 2
VOID set_debug(PRIV_TASK, ENUM)
.IP \(bu 2
VOID set_method(PRIV_TASK, STRING)
.IP \(bu 2
VOID set_proxy(PRIV_TASK, STRING)
.IP \(bu 2
VOID set_ssl_cafile(PRIV_TASK, STRING)
.IP \(bu 2
VOID set_ssl_capath(PRIV_TASK, STRING)
.IP \(bu 2
VOID set_ssl_verify_host(PRIV_TASK, INT)
.IP \(bu 2
VOID set_ssl_verify_peer(PRIV_TASK, INT)
.IP \(bu 2
VOID set_timeout(PRIV_TASK, INT)
.IP \(bu 2
VOID set_unix_path(PRIV_TASK, STRING)
.IP \(bu 2
INT status(PRIV_TASK)
.IP \(bu 2
STRING unescape(STRING)
.UNINDENT
.SS VOID get(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID get(PRIV_TASK, STRING)
.UNINDENT
.sp
# HEAD the URL in the first parameter
.. _func_head:
.SS VOID head(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID head(PRIV_TASK, STRING)
.UNINDENT
.sp
# Compatibility name for get
.. _func_fetch:
.SS VOID fetch(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID fetch(PRIV_TASK, STRING)
.UNINDENT
.sp
# POST the URL in the first parameter with the body fields given in
# the second
.. _func_post:
.SS VOID post(PRIV_TASK, STRING, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID post(PRIV_TASK, STRING, STRING)
.UNINDENT
.sp
# Return the header named in the first argument
.. _func_header:
.SS STRING header(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
STRING header(PRIV_TASK, STRING)
.UNINDENT
.sp
# Free the memory used by headers. Not needed, will be handled
# automatically if it\(aqs not called.
.. _func_free:
.SS VOID free(PRIV_TASK)
.INDENT 0.0
.TP
.B Prototype
VOID free(PRIV_TASK)
.UNINDENT
.sp
# The HTTP status code
.. _func_status:
.SS INT status(PRIV_TASK)
.INDENT 0.0
.TP
.B Prototype
INT status(PRIV_TASK)
.UNINDENT
.SS STRING error(PRIV_TASK)
.INDENT 0.0
.TP
.B Prototype
STRING error(PRIV_TASK)
.UNINDENT
.sp
# A response body can contain chars that are not allowed into headers,
# e.g. CRLF. If the response body is a binary and/or it contains any
# special chars, then this funtion MUST be used via synthetic:
# synthetic(curl.body()). Otherwise it can be assigned to a header
# resp.http.x\-body = curl.body();
# Test 12 for a complete example.
.. _func_body:
.SS STRING body(PRIV_TASK)
.INDENT 0.0
.TP
.B Prototype
STRING body(PRIV_TASK)
.UNINDENT
.sp
# set_timeout and set_connect_timeout are not
# global, but per request functions, therefore
# they can\(aqt be used in vcl_init.
.. _func_set_timeout:
.SS VOID set_timeout(PRIV_TASK, INT)
.INDENT 0.0
.TP
.B Prototype
VOID set_timeout(PRIV_TASK, INT)
.UNINDENT
.IP "System Message: WARNING/2 (vmod_curl.man.rst:, line 151)"
Definition list ends without a blank line; unexpected unindent.
.SS VOID set_connect_timeout(PRIV_TASK, INT)
.INDENT 0.0
.TP
.B Prototype
VOID set_connect_timeout(PRIV_TASK, INT)
.UNINDENT
.SS VOID set_ssl_verify_peer(PRIV_TASK, INT)
.INDENT 0.0
.TP
.B Prototype
VOID set_ssl_verify_peer(PRIV_TASK, INT)
.UNINDENT
.IP "System Message: WARNING/2 (vmod_curl.man.rst:, line 166)"
Definition list ends without a blank line; unexpected unindent.
.SS VOID set_ssl_verify_host(PRIV_TASK, INT)
.INDENT 0.0
.TP
.B Prototype
VOID set_ssl_verify_host(PRIV_TASK, INT)
.UNINDENT
.IP "System Message: WARNING/2 (vmod_curl.man.rst:, line 173)"
Definition list ends without a blank line; unexpected unindent.
.SS VOID set_ssl_cafile(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID set_ssl_cafile(PRIV_TASK, STRING)
.UNINDENT
.IP "System Message: WARNING/2 (vmod_curl.man.rst:, line 180)"
Definition list ends without a blank line; unexpected unindent.
.SS VOID set_ssl_capath(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID set_ssl_capath(PRIV_TASK, STRING)
.UNINDENT
.SS STRING escape(STRING)
.INDENT 0.0
.TP
.B Prototype
STRING escape(STRING)
.UNINDENT
.IP "System Message: WARNING/2 (vmod_curl.man.rst:, line 195)"
Definition list ends without a blank line; unexpected unindent.
.SS STRING unescape(STRING)
.INDENT 0.0
.TP
.B Prototype
STRING unescape(STRING)
.UNINDENT
.sp
# Add / Remove request headers
.. _func_header_add:
.SS VOID header_add(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID header_add(PRIV_TASK, STRING)
.UNINDENT
.IP "System Message: WARNING/2 (vmod_curl.man.rst:, line 211)"
Definition list ends without a blank line; unexpected unindent.
.SS VOID header_remove(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID header_remove(PRIV_TASK, STRING)
.UNINDENT
.sp
# Add all request headers from the req (or bereq) object
.. _func_header_add_all:
.SS VOID header_add_all(PRIV_TASK)
.INDENT 0.0
.TP
.B Prototype
VOID header_add_all(PRIV_TASK)
.UNINDENT
.SS VOID proxy(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID proxy(PRIV_TASK, STRING)
.UNINDENT
.SS VOID set_proxy(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID set_proxy(PRIV_TASK, STRING)
.UNINDENT
.IP "System Message: WARNING/2 (vmod_curl.man.rst:, line 243)"
Definition list ends without a blank line; unexpected unindent.
.SS VOID set_method(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID set_method(PRIV_TASK, STRING)
.UNINDENT
.SS VOID set_unix_path(PRIV_TASK, STRING)
.INDENT 0.0
.TP
.B Prototype
VOID set_unix_path(PRIV_TASK, STRING)
.UNINDENT
.SS VOID set_debug(PRIV_TASK, ENUM)
.INDENT 0.0
.TP
.B Prototype
VOID set_debug(PRIV_TASK, ENUM)
.UNINDENT
.\" Generated by docutils manpage writer.
.
